USE Theoretical
GO

CREATE TABLE R(
ID1 INT PRIMARY KEY,
ID2 INT,
A VARCHAR(100),
B VARCHAR(100),
C VARCHAR(100),
D INT,
E INT,
F INT)

INSERT INTO R VALUES(16,13,'a1',NULL,'A5',1,-1,600)
INSERT INTO R VALUES(17,14,'a1','c1','A2',1,2,100)
INSERT INTO R VALUES(18,15,'a9','c2','A1',-2,2,50)
INSERT INTO R VALUES(19,2,'a2','c3','A4',1,-5,70)
INSERT INTO R VALUES(21,3,'a2',NULL,'A3',1,5,100)
INSERT INTO R VALUES(22,4,'a5',NULL,'A5',1,5,500)
INSERT INTO R VALUES(23,1,'a5','a_%z','A7',0,2,250)
INSERT INTO R VALUES(24,25,'a5','_%','A1',0,2,250)
INSERT INTO R VALUES(28,11,'a7','_','A2',2,5,100)
INSERT INTO R VALUES(29,12,NULL,'%','A2',2,1,200)
INSERT INTO R VALUES(30,16,'a9','c','A3',0,2,200)

DELETE
FROM R
WHERE A='a5' and a='a7'

SELECT *
FROM R r1 INNER JOIN
R r2 ON
r1.A=r2.A

SELECT *
FROM R WHERE E BETWEEN -2 AND 3

SELECT *
FROM R
WHERE B IS NOT NULL

SELECT *
FROM R 
WHERE D-2>3



--5
SELECT r2.ID1,COUNT(*)N
FROM R r1 Right JOIN R r2 ON r1.ID1=r2.ID2
group by r2.ID1
HAVING COUNT(DISTINCT r2.D)=1

--6
SELECT COUNT(*)
FROM R
GROUP BY F

--7


CREATE TABLE T(
ID1 INT,
ID2 INT,
PRIMARY KEY(ID1,ID2),
A INT,
B INT,
C INT,
D INT,
E INT,
F INT)

INSERT INTO T VALUES(1,1,150,600,1,200,3,1)
INSERT INTO T VALUES(1,2,150,400,2,200,3,2)
INSERT INTO T VALUES(1,3,200,400,3,200,3,8)
INSERT INTO T VALUES(2,1,200,300,4,200,4,8)
INSERT INTO T VALUES(2,2,300,300,5,200,4,9)
INSERT INTO T VALUES(2,3,300,200,6,300,4,9)
INSERT INTO T VALUES(3,1,400,200,7,100,5,5)
INSERT INTO T VALUES(3,2,400,100,8,200,5,5)
INSERT INTO T VALUES(3,3,500,100,9,300,5,4)

SELECT t1.ID1,t1.ID2,COUNT(*)N
FROM T t1 INNER JOIN T t2 ON t1.A=t2.B
GROUP BY t1.ID1,t1.ID2
HAVING COUNT(*)>1


SELECT t1.ID1,COUNT(*)M
FROM T t1
WHERE t1.C>4
GROup BY t1.ID1
HAVING MIN(t1.D)>=200
EXCEPT
SELECT t2.ID2,ID1
FROM T t2
WHERE t2.E IN(
SELECT F FROm T)

SELECT *
FROM (
	(SELECT ID1,ID2
	FROM T 
	WHERE F>=2)
INTERSECT
	(SELECT ID2,ID1
	FROM T
	WHERE A>=200)
)t

CREATE TABLE L(
 id INT PRIMARY KEY,
 foreignKey INT NOT NULL REFERENCES R(ID1) ON DELETE CASCADE
)